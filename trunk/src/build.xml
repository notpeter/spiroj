<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="all" name="SpiroJ">
    <!-- Written to assume that classpath is rooted in the current directory. -->
    <!-- So this should be OK if you make this script in the root of a filesystem. -->
    <!-- If not, just change src.dir to be the root of your sources' package tree -->
    <!-- and use e.g. View over a Filesystem to mount that subdirectory with all capabilities. -->
    <!-- The idea is that both Ant and NetBeans have to know what the package root is -->
    <!-- for the classes in your application. -->

    <!-- Don't worry if you don't know the Ant syntax completely or need help on some tasks! -->
    <!-- The standard Ant documentation can be downloaded from AutoUpdate and -->
    <!-- and then you can access the Ant manual in the online help. -->

    <target name="init">
        <property location="../classes" name="classes.dir"/>
        <property location="." name="src.dir"/>
        <property location="doc/api" name="javadoc.dir"/>
        <property name="project.name" value="${ant.project.name}"/>
        <property location="../${project.name}.jar" name="jar"/>
        <property location="../plaf_cs.jar" name="plaf_cs"/>
        <property location="../../_Release/${project.name}" name="release.dir"/>
    </target>

    <target depends="init" name="compile">
        <!-- Both srcdir and destdir should be package roots. -->
        <mkdir dir="${classes.dir}"/>
        <javac debug="true" deprecation="true" destdir="${classes.dir}" encoding="Cp1250" srcdir="${src.dir}">
            <!-- To add something to the classpath: -->
            <!-- <classpath><pathelement location="${mylib}"/></classpath> -->
            <!-- To exclude some files: -->
            <!-- <exclude name="com/foo/SomeFile.java"/><exclude name="com/foo/somepackage/"/> -->
        </javac>
        <copy todir="${classes.dir}/resources">
            <fileset dir="./resources"/>
        </copy>
    </target>

    <target depends="init,compile" description="Make jar" name="jar">
        <!-- To make a standalone app, insert into <jar>: -->
        <jar basedir="${classes.dir}" compress="true" jarfile="${jar}">
          <manifest>
					  <attribute name="Main-Class" value="frg.spiro.App"/>
					  <attribute name="Class-Path" value="plaf_cs.jar"/>
					</manifest>
          <include name="**/*.class"/>
          <include name="resources/*"/>
          <exclude name="com/sun/**"/>
					<exclude name="frg/xar/**"/> <!-- Temporarily -->
        </jar>
				<jar basedir="${classes.dir}" compress="true" jarfile="${plaf_cs}">
          <include name="com/sun/**/*.class"/>
        </jar>
    </target>
    
    <target depends="init,jar" description="Prepare application release" name="release">
      <copy todir="${release.dir}">
        <fileset dir="../">
          <include name="*.jar"/>
          <include name="*.bat"/>
        </fileset>
      </copy>
      <copy todir="${release.dir}">
        <fileset dir="../">
          <include name="examples/*.xml"/>
        </fileset>
      </copy>
      <copy todir="${release.dir}/doc">
        <fileset dir="../doc">
          <include name="*.html"/>
          <include name="*.css"/>
          <include name="*.gif"/>
          <include name="*.png"/>
        </fileset>
      </copy>
    </target>

    <target depends="init,jar" description="Build everything." name="all"/>

    <target depends="init" description="Javadoc for my API." name="javadoc">
        <mkdir dir="${javadoc.dir}"/>
        <javadoc destdir="${javadoc.dir}" packagenames="*">
            <sourcepath>
                <pathelement location="${src.dir}"/>
            </sourcepath>
        </javadoc>
    </target>

    <target depends="init" description="Clean all build products." name="clean">
        <delete dir="${classes.dir}"/>
        <delete dir="${javadoc.dir}"/>
        <!-- <delete file="${jar}"/> -->
    </target>
</project>
